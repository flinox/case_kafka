version: '2.1'

networks:
  cluster-net:
    driver: bridge

services:


  zookeeper1:
    #build: ./zookeeper/
    image: flinox/zookeeper
    user: 1000:1000
    hostname: zookeeper1
    container_name: zookeeper1      
    networks:
      - cluster-net
    volumes:
      - ./zookeeper/data/zookeeper1:/data/zookeeper
      - ./zookeeper/log/zookeeper1:/opt/zookeeper/log
      - ./zookeeper/conf/zookeeper1:/opt/zookeeper/conf
    ports:
      - "2181:2181"
      - "8180:8080"            
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ID: 1
      JAVA: "-javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.11.0.jar=8080:/opt/prometheus/zookeeper.yaml"      
    healthcheck:
        test: ["CMD", "echo", "stat", "|", "nc", "zookeeper1", "2181"]
        interval: 30s
        timeout: 20s
        retries: 5
  

  zookeeper2:
    #build: ./zookeeper/    
    image: flinox/zookeeper
    user: 1000:1000
    hostname: zookeeper2
    container_name: zookeeper2
    networks:
      - cluster-net
    volumes:
      - ./zookeeper/data/zookeeper2:/data/zookeeper
      - ./zookeeper/log/zookeeper2:/opt/zookeeper/log
      - ./zookeeper/conf/zookeeper2:/opt/zookeeper/conf      
    ports:
      - "2182:2181"
      - "8280:8080"            
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ID: 2     
      JAVA: "-javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.11.0.jar=8080:/opt/prometheus/zookeeper.yaml"      
    healthcheck:
        test: ["CMD", "echo", "stat", "|", "nc", "zookeeper2", "2181"]
        interval: 30s
        timeout: 20s
        retries: 5      
    depends_on:
      zookeeper1:
        condition: service_healthy


  zookeeper3:
    #build: ./zookeeper/    
    image: flinox/zookeeper
    user: 1000:1000
    hostname: zookeeper3
    container_name: zookeeper3
    networks:
      - cluster-net
    volumes:
      - ./zookeeper/data/zookeeper3:/data/zookeeper
      - ./zookeeper/log/zookeeper3:/opt/zookeeper/log
      - ./zookeeper/conf/zookeeper3:/opt/zookeeper/conf      
    ports:
      - "2183:2181"
      - "8380:8080"      
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ID: 3   
      JAVA: "-javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.11.0.jar=8080:/opt/prometheus/zookeeper.yaml"
    healthcheck:
        test: ["CMD", "echo", "stat", "|", "nc", "zookeeper3", "2181"]
        interval: 30s
        timeout: 20s
        retries: 5         
    depends_on:
      zookeeper1:
        condition: service_healthy
      zookeeper2:
        condition: service_healthy


  kafka1:
    #build: ./kafka/    
    image: flinox/kafka
    user: 1000:1000    
    hostname: kafka1
    container_name: kafka1
    networks:
      - cluster-net
    volumes:
      - ./kafka/log/kafka1:/opt/kafka/logs
      - ./kafka/log/kafka1/log:/opt/kafka/log      
      - ./kafka/config/kafka1:/opt/kafka/config
      - ./kafka/ssl/kafka1:/opt/ssl/
      - ./kafka/ssl/script:/opt/script/      
    ports:
      - "9992:9092"
      - "9093:9093"      
      - "8082:8080"
    environment:
      ID: 1
      BROKERPASSWORD: verysecret       
      KAFKA_HEAP_OPTS: "-Xmx1024M -Xms1024M"
      KAFKA_OPTS: "-javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.11.0.jar=8080:/opt/prometheus/kafka-2_0_0.yml"
      KAFKA_OFFSETS_RETENTION_MINUTES: 10080     
    depends_on:
      zookeeper1:
        condition: service_healthy
      zookeeper2:
        condition: service_healthy  
      zookeeper3:
        condition: service_healthy


  kafka2:
    #build: ./kafka/        
    image: flinox/kafka
    user: 1000:1000    
    hostname: kafka2
    container_name: kafka2
    networks:
      - cluster-net
    volumes:
      - ./kafka/log/kafka2:/opt/kafka/logs
      - ./kafka/log/kafka2/log:/opt/kafka/log      
      - ./kafka/config/kafka2:/opt/kafka/config
      - ./kafka/ssl/kafka2:/opt/ssl/      
      - ./kafka/ssl/script:/opt/script/      
    ports:
      - "9993:9092"
      - "9094:9093"      
      - "8083:8080"      
    environment:
      ID: 2
      BROKERPASSWORD: "verysecret"
      KAFKA_HEAP_OPTS: "-Xmx1024M -Xms1024M" 
      KAFKA_OPTS: "-javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.11.0.jar=8080:/opt/prometheus/kafka-2_0_0.yml"     
      KAFKA_OFFSETS_RETENTION_MINUTES: 10080      
    depends_on:
      zookeeper1:
        condition: service_healthy
      zookeeper2:
        condition: service_healthy  
      zookeeper3:
        condition: service_healthy   
      kafka1:
        condition: service_started


  kafka3:
    #build: ./kafka/        
    image: flinox/kafka
    user: 1000:1000    
    hostname: kafka3
    container_name: kafka3
    networks:
      - cluster-net
    volumes:
      - ./kafka/log/kafka3:/opt/kafka/logs
      - ./kafka/log/kafka3/log:/opt/kafka/log      
      - ./kafka/config/kafka3:/opt/kafka/config
      - ./kafka/ssl/kafka3:/opt/ssl/
      - ./kafka/ssl/script:/opt/script/  
    ports:
      - "9994:9092"
      - "9095:9093"      
      - "8084:8080"      
    environment:
      ID: 3
      BROKERPASSWORD: "verysecret"
      KAFKA_HEAP_OPTS: "-Xmx1024M -Xms1024M"
      KAFKA_OPTS: "-javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.11.0.jar=8080:/opt/prometheus/kafka-2_0_0.yml"
      KAFKA_OFFSETS_RETENTION_MINUTES: 10080
    depends_on:
      zookeeper1:
        condition: service_healthy
      zookeeper2:
        condition: service_healthy  
      zookeeper3:
        condition: service_healthy   
      kafka1:
        condition: service_started        
      kafka2:
        condition: service_started


  kafka_monitoring:
    #build: ./kafka_monitoring/
    image: flinox/kafka_monitoring
    hostname: kafka_monitoring
    container_name: kafka_monitoring
    networks:
      - cluster-net
    volumes:
      - ./kafka_monitoring/prometheus/config/:/opt/prometheus/config
      - ./kafka_monitoring/prometheus/data/:/opt/prometheus/data
      - ./kafka_monitoring/grafana/conf/:/opt/grafana/conf
      - ./kafka_monitoring/grafana/data/:/opt/grafana/data      
      - ./kafka_monitoring/ssl/:/opt/ssl      
    ports:
      - "9090:9090"
      - "3000:3000"
    environment: 
      CAPASSWORD: "capassword"
    stdin_open: true
    tty: true
    depends_on:
      zookeeper1:
        condition: service_started
      zookeeper2:
        condition: service_started  
      zookeeper3:
        condition: service_started   
      kafka1:
        condition: service_started        
      kafka2:
        condition: service_started    
      kafka3:
        condition: service_started


  kafka_client:
    #build: ./kafka_client/
    image: flinox/kafka_client
    hostname: kafka_client
    container_name: kafka_client
    networks:
      - cluster-net
    volumes:
      - ./kafka_client/app_consumer/:/go/src/app_consumer
      - ./kafka_client/app_producer/:/go/src/app_producer  
      - ./kafka_client/ssl/:/opt/ssl    
    environment: 
      KAFKA_HOST: "kafka1:9092,kafka2:9093,kafka3:9094"
      KAFKA_TOPIC: "test-topic"
      ZOOKEEPER_HOST: "zookeeper1:2181,zookeeper2:2181,zookeeper3:2181"
      CONSUMER_GROUP: "flinox"
      CLIENTPASSWORD: "verysecretclient"

    stdin_open: true
    tty: true
    command: /bin/bash -c "sleep infinity"        